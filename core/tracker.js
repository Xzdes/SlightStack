// Файл: core/tracker.js
// Назначение: Управляет глобальным стеком зависимостей.
// Отслеживает, какая функция обновления активна в данный момент.

// Стек для хранения активных функций-обновляторов.
// Используем простой массив, потому что компоненты могут быть вложены друг в друга,
// и нам нужна структура "последний вошел - первый вышел" (LIFO).
const activeUpdaterStack = [];

/**
 * Помещает функцию-обновлятор на вершину стека.
 * Это происходит перед тем, как компонент начинает рендериться.
 * @param {Function} updater - Функция, которая будет вызвана для обновления компонента.
 */
function startTracking(updater) {
  activeUpdaterStack.push(updater);
}

/**
 * Убирает функцию-обновлятор с вершины стека.
 * Это происходит после того, как компонент закончил рендериться.
 */
function stopTracking() {
  activeUpdaterStack.pop();
}

/**
 * Возвращает текущую активную функцию-обновлятор.
 * Реактивная система будет вызывать эту функцию, чтобы узнать,
 * кого нужно подписать на изменения данных.
 * @returns {Function|undefined} Активный обновлятор или undefined, если стек пуст.
 */
function getActiveUpdater() {
  // Возвращаем последний элемент, не удаляя его.
  return activeUpdaterStack[activeUpdaterStack.length - 1];
}

module.exports = {
  startTracking,
  stopTracking,
  getActiveUpdater,
};